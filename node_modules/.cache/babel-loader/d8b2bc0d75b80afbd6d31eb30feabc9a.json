{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Restaurant\\\\Customer-App\\\\red-pepper\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport classes from './Input.module.css';\n\nconst Input = props => {\n  let inputEl = null;\n  let validationError = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = React.createElement(\"p\", {\n      className: classes.ValidationError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Please enter a valid value!\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputEl = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.Label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, props.elementLabel), React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })));\n      break;\n\n    case 'textArea':\n      inputEl = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.Label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, props.elementLabel), React.createElement(\"textarea\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n      break;\n\n    case 'select':\n      inputEl = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.Label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, props.elementLabel), React.createElement(Select, {\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        isClearable: props.elementConfig.isClearable,\n        onChange: props.changed,\n        options: props.elementConfig.options,\n        isMulti: props.elementConfig.isMulti,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      inputEl = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: classes.Label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, props.elementLabel), React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.label), inputEl, validationError);\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Workspace/Restaurant/Customer-App/red-pepper/src/components/UI/Input/Input.js"],"names":["React","Select","classes","Input","props","inputEl","validationError","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","ValidationError","elementType","Label","elementLabel","join","elementConfig","value","changed","isClearable","options","isMulti","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n\r\n    let inputEl = null;\r\n    let validationError = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'): \r\n            inputEl = (<div>\r\n                    <label className={classes.Label}>{props.elementLabel}</label>\r\n                    <input \r\n                                    className={inputClasses.join(' ')} \r\n                                    {...props.elementConfig} \r\n                                    value={props.value} \r\n                    onChange={props.changed}/>\r\n                </div>); \r\n            break;\r\n        case ('textArea'): \r\n            inputEl = (\r\n                        <div>\r\n                            <label className={classes.Label}>{props.elementLabel}</label>\r\n                            <textarea \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value}\r\n                                onChange={props.changed}/>\r\n                        </div>); \r\n            break;\r\n        case ('select'): \r\n                        \r\n            inputEl = (\r\n                        <div>\r\n                            <label className={classes.Label}>{props.elementLabel}</label>\r\n                            <Select \r\n                                className='basic-multi-select'\r\n                                classNamePrefix='select'\r\n                                isClearable={props.elementConfig.isClearable}\r\n                                onChange={props.changed}\r\n                                options={props.elementConfig.options}\r\n                                isMulti={props.elementConfig.isMulti}\r\n                                >\r\n                            </Select>\r\n                        </div>); \r\n            break;\r\n        default: \r\n            inputEl = (<div>\r\n                            <label className={classes.Label}>{props.elementLabel}</label>\r\n                            <input \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value}\r\n                                onChange={props.changed}/>\r\n                        </div>);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputEl}\r\n            {validationError}\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}