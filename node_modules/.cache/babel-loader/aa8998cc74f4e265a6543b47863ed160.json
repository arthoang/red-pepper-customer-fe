{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  //data\n  currentOrderItems: []\n};\n\nconst addToOrder = (state, action) => {\n  let newCurrentOrderItems = [...state.currentOrderItems];\n  console.log(newCurrentOrderItems);\n  newCurrentOrderItems.push(action.item);\n  return updateObject(state, {\n    currentOrderItems: newCurrentOrderItems\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_ORDER:\n      return addToOrder(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Workspace/Restaurant/Customer-App/red-pepper/src/store/reducers/OrderReducer.js"],"names":["actionTypes","updateObject","initialState","currentOrderItems","addToOrder","state","action","newCurrentOrderItems","console","log","push","item","reducer","type","ADD_TO_ORDER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,iBAAiB,EAAE;AAFF,CAArB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAElC,MAAIC,oBAAoB,GAAG,CAAC,GAAGF,KAAK,CAACF,iBAAV,CAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,oBAAZ;AACAA,EAAAA,oBAAoB,CAACG,IAArB,CAA0BJ,MAAM,CAACK,IAAjC;AACA,SAAOV,YAAY,CAACI,KAAD,EAAQ;AAACF,IAAAA,iBAAiB,EAAEI;AAApB,GAAR,CAAnB;AACH,CAND;;AAQA,MAAMK,OAAO,GAAG,CAACP,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACO,IAAf;AACI,SAAKb,WAAW,CAACc,YAAjB;AAA+B,aAAOV,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;;AAC/B;AAAS,aAAOD,KAAP;AAFb;AAIH,CALD;;AAOA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    //data\r\n    currentOrderItems: [],\r\n\r\n};\r\n\r\nconst addToOrder = (state, action) => {\r\n\r\n    let newCurrentOrderItems = [...state.currentOrderItems];\r\n    console.log(newCurrentOrderItems);\r\n    newCurrentOrderItems.push(action.item);\r\n    return updateObject(state, {currentOrderItems: newCurrentOrderItems});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_ORDER: return addToOrder(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}