{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Restaurant\\\\Customer-App\\\\red-pepper\\\\src\\\\hoc\\\\Layout\\\\Layout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport Footer from '../../components/UI/Footer/Footer';\nimport classes from './Layout.module.css';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false,\n      scrolled: false\n    };\n\n    this.toggleSideDrawerHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.listenToScroll.bind(this));\n  }\n\n  listenToScroll() {\n    console.log(this.state.scrolled);\n\n    if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {// this.toggleScrollValue(true);\n    } else {}\n  }\n\n  toggleScrollValue(value) {\n    // this.setState({scrolled: value});\n    console.log(\"scrolled was set to \" + value);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      togglerClicked: this.toggleSideDrawerHandler,\n      isAuthenticated: this.props.isAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      show: this.state.showSideDrawer,\n      close: this.toggleSideDrawerHandler,\n      isAuthenticated: this.props.isAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.children), React.createElement(\"div\", {\n      className: classes.Push,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);","map":{"version":3,"sources":["C:/Workspace/Restaurant/Customer-App/red-pepper/src/hoc/Layout/Layout.js"],"names":["React","Component","connect","Toolbar","SideDrawer","Footer","classes","Layout","state","showSideDrawer","scrolled","toggleSideDrawerHandler","setState","prevState","componentDidMount","window","addEventListener","listenToScroll","bind","console","log","document","body","scrollTop","documentElement","toggleScrollValue","value","render","props","isAuthenticated","Content","children","Push","mapStateToProps","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACJC,MAAAA,cAAc,EAAE,KADZ;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADmB;;AAAA,SAyB3BC,uBAzB2B,GAyBD,MAAM;AAC5B,WAAKC,QAAL,CAAeC,SAAD,IAAe;AACrB,eAAO;AAACJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA5B,SAAP;AACP,OAFD;AAGH,KA7B0B;AAAA;;AAM3BK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAlC;AACH;;AAEDD,EAAAA,cAAc,GAAG;AACbE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWE,QAAvB;;AACA,QAAIW,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,GAA1B,IAAiCF,QAAQ,CAACG,eAAT,CAAyBD,SAAzB,GAAqC,GAA1E,EAA+E,CAC3E;AACH,KAFD,MAEO,CAEN;AACJ;;AAEDE,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBM,KAArC;AACH;;AASDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,cAAc,EAAE,KAAKhB,uBAA9B;AAAuD,MAAA,eAAe,EAAE,KAAKiB,KAAL,CAAWC,eAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWC,cAA7B;AAA6C,MAAA,KAAK,EAAE,KAAKE,uBAAzD;AAAkF,MAAA,eAAe,EAAE,KAAKiB,KAAL,CAAWC,eAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAM,MAAA,SAAS,EAAEvB,OAAO,CAACwB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,QADhB,CAHJ,EAMI;AAAK,MAAA,SAAS,EAAEzB,OAAO,CAAC0B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AA3C0B;;AA8C/B,MAAMC,eAAe,GAAGzB,KAAK,IAAI;AAC7B,SAAO;AACHqB,IAAAA,eAAe,EAAErB,KAAK,CAAC0B,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAejC,OAAO,CAAC+B,eAAD,CAAP,CAAyB1B,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Footer from '../../components/UI/Footer/Footer';\r\nimport classes from './Layout.module.css';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false,\r\n        scrolled: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.listenToScroll.bind(this));\r\n    }\r\n\r\n    listenToScroll() {\r\n        console.log(this.state.scrolled);\r\n        if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n            // this.toggleScrollValue(true);\r\n        } else {\r\n            \r\n        }\r\n    }\r\n\r\n    toggleScrollValue(value) {\r\n        // this.setState({scrolled: value});\r\n        console.log(\"scrolled was set to \" + value);\r\n    }\r\n\r\n\r\n    toggleSideDrawerHandler = () => {\r\n        this.setState((prevState) => {\r\n                return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar togglerClicked={this.toggleSideDrawerHandler} isAuthenticated={this.props.isAuthenticated}/>\r\n                <SideDrawer show={this.state.showSideDrawer} close={this.toggleSideDrawerHandler} isAuthenticated={this.props.isAuthenticated}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n                <div className={classes.Push} />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n    \r\nexport default connect(mapStateToProps)(Layout);"]},"metadata":{},"sourceType":"module"}