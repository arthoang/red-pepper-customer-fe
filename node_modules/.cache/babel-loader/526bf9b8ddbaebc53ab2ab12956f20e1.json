{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: '/'\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.authData.token,\n    userId: action.authData.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    error: action.error,\n    loading: false\n  }); // return updateObject(state, {token: null, userId: null, error: null, loading: false});\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n  });\n};\n\nconst authSetRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.AUTH_SET_REDIRECT_PATH:\n      return authSetRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Workspace/Restaurant/Customer-App/red-pepper/src/store/reducers/AuthReducer.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","authRedirectPath","authStart","state","action","authSuccess","authData","authFail","authLogout","authSetRedirectPath","path","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_SET_REDIRECT_PATH"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,MAAM,EAAE,IAFS;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,gBAAgB,EAAE;AALD,CAArB;;AAQA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACJ,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMK,WAAW,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACN,IAAAA,KAAK,EAAEO,MAAM,CAACE,QAAP,CAAgBT,KAAxB;AAA+BC,IAAAA,MAAM,EAAEM,MAAM,CAACE,QAAP,CAAgBR,MAAvD;AAA+DC,IAAAA,KAAK,EAAE,IAAtE;AAA4EC,IAAAA,OAAO,EAAE;AAArF,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMO,QAAQ,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACN,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE,IAAtB;AAA4BC,IAAAA,KAAK,EAAEK,MAAM,CAACL,KAA1C;AAAiDC,IAAAA,OAAO,EAAE;AAA1D,GAAR,CAAnB,CADgC,CAEhC;AACH,CAHD;;AAKA,MAAMQ,UAAU,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAClC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACN,IAAAA,KAAK,EAAE,IAAR;AAAcC,IAAAA,MAAM,EAAE,IAAtB;AAA4BC,IAAAA,KAAK,EAAE,IAAnC;AAAyCC,IAAAA,OAAO,EAAE;AAAlD,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMS,mBAAmB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAACF,IAAAA,gBAAgB,EAAEG,MAAM,CAACM;AAA1B,GAAR,CAAnB;AACH,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACR,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACQ,IAAf;AACI,SAAKlB,WAAW,CAACmB,UAAjB;AAA6B,aAAOX,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKV,WAAW,CAACoB,YAAjB;AAA+B,aAAOT,WAAW,CAACF,KAAD,EAAQC,MAAR,CAAlB;;AAC/B,SAAKV,WAAW,CAACqB,SAAjB;AAA4B,aAAOR,QAAQ,CAACJ,KAAD,EAAQC,MAAR,CAAf;;AAC5B,SAAKV,WAAW,CAACsB,WAAjB;AAA8B,aAAOR,UAAU,CAACL,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKV,WAAW,CAACuB,sBAAjB;AAAyC,aAAOR,mBAAmB,CAACN,KAAD,EAAQC,MAAR,CAA1B;;AACzC;AAAS,aAAOD,KAAP;AANb;AAQH,CATD;;AAWA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {token: action.authData.token, userId: action.authData.userId, error: null, loading: false});\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null, error: action.error, loading: false});\r\n    // return updateObject(state, {token: null, userId: null, error: null, loading: false});\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {token: null, userId: null, error: null, loading: false});\r\n}\r\n\r\nconst authSetRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.AUTH_SET_REDIRECT_PATH: return authSetRedirectPath(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}