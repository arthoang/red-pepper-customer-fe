{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Restaurant\\\\Customer-App\\\\red-pepper\\\\src\\\\components\\\\DataTable\\\\Table.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useTable } from 'react-table';\nimport classnames from 'classnames';\nimport classes from './DataTable.module.css';\n\nconst Table = props => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: props.columns,\n    data: props.data\n  });\n  let classNames = classnames(props.className.split(\" \").map(name => {\n    return classes[name];\n  }));\n\n  const onRowClick = event => {\n    let rowSelected = ReactDOM.findDOMNode(event.target).parentNode.rowIndex;\n    props.selectRow(props.data[rowSelected - 1]);\n  }; //render UI\n\n\n  return React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    className: classNames,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, headerGroups.map(headerGroup => React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), headerGroup.headers.map(column => {\n    if (column.show === false) {\n      column.toggleHidden();\n    }\n\n    return React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), column.render('Header'));\n  })))), React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), rows.map((row, i) => {\n    prepareRow(row); //console.log(row.getRowProps());\n\n    return React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      onClick: onRowClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), row.cells.map(cell => {\n      return React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), cell.render('Cell'));\n    }));\n  })));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Workspace/Restaurant/Customer-App/red-pepper/src/components/DataTable/Table.js"],"names":["React","ReactDOM","useTable","classnames","classes","Table","props","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","columns","data","classNames","className","split","map","name","onRowClick","event","rowSelected","findDOMNode","target","parentNode","rowIndex","selectRow","headerGroup","getHeaderGroupProps","headers","column","show","toggleHidden","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFT,QAAQ,CAAC;AACTU,IAAAA,OAAO,EAAEN,KAAK,CAACM,OADN;AAETC,IAAAA,IAAI,EAAEP,KAAK,CAACO;AAFH,GAAD,CANZ;AAWA,MAAIC,UAAU,GAAGX,UAAU,CAACG,KAAK,CAACS,SAAN,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,GAA3B,CAA+BC,IAAI,IAAI;AAC/D,WAAOd,OAAO,CAACc,IAAD,CAAd;AACH,GAF2B,CAAD,CAA3B;;AAIA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAIC,WAAW,GAAGpB,QAAQ,CAACqB,WAAT,CAAqBF,KAAK,CAACG,MAA3B,EAAmCC,UAAnC,CAA8CC,QAAhE;AACAnB,IAAAA,KAAK,CAACoB,SAAN,CAAgBpB,KAAK,CAACO,IAAN,CAAWQ,WAAW,GAAC,CAAvB,CAAhB;AACH,GAHD,CAjBqB,CAsBrB;;;AACA,SACI,+CAAWd,aAAa,EAAxB;AAA4B,IAAA,SAAS,EAAEO,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,YAAY,CAACQ,GAAb,CAAiBU,WAAW,IACzB,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKD,WAAW,CAACE,OAAZ,CAAoBZ,GAApB,CAAwBa,MAAM,IAAI;AAC/B,QAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvBD,MAAAA,MAAM,CAACE,YAAP;AACH;;AACD,WACI,4CAAQF,MAAM,CAACG,cAAP,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkCH,MAAM,CAACI,MAAP,CAAc,QAAd,CAAlC,CADJ;AAGH,GAPA,CADL,CADH,CADL,CADJ,EAeI,+CAAW1B,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKE,IAAI,CAACO,GAAL,CACD,CAACkB,GAAD,EAAMC,CAAN,KAAY;AACRzB,IAAAA,UAAU,CAACwB,GAAD,CAAV,CADQ,CAER;;AACA,WACA,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAA2B,MAAA,OAAO,EAAElB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKgB,GAAG,CAACG,KAAJ,CAAUrB,GAAV,CAAcsB,IAAI,IAAI;AACvB,aAAO,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACC,KAFA,CADL,CADA;AAME,GAVL,CADL,CAfJ,CADJ;AAiCH,CAxDD;;AA0DA,eAAe7B,KAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useTable } from 'react-table';\r\nimport classnames from 'classnames';\r\nimport classes from './DataTable.module.css';\r\n\r\nconst Table = (props) => {\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({\r\n        columns: props.columns,\r\n        data: props.data\r\n    });\r\n\r\n    let classNames = classnames(props.className.split(\" \").map(name => {\r\n        return classes[name];\r\n    }));\r\n\r\n    const onRowClick = (event) => {\r\n        let rowSelected = ReactDOM.findDOMNode(event.target).parentNode.rowIndex;\r\n        props.selectRow(props.data[rowSelected-1]);\r\n    }\r\n\r\n    //render UI\r\n    return (\r\n        <table {...getTableProps()} className={classNames}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => {\r\n                            if (column.show === false) {\r\n                                column.toggleHidden();\r\n                            }\r\n                            return (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(\r\n                (row, i) => {\r\n                    prepareRow(row);\r\n                    //console.log(row.getRowProps());\r\n                    return (\r\n                    <tr {...row.getRowProps()} onClick={onRowClick}>\r\n                        {row.cells.map(cell => {\r\n                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        })}\r\n                    </tr>\r\n                    )}\r\n                )}\r\n            </tbody>\r\n\r\n        </table>\r\n    )\r\n} \r\n\r\nexport default Table;"]},"metadata":{},"sourceType":"module"}